/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package example.avro;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Employee extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Employee\",\"namespace\":\"example.avro\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"dateOfBirth\",\"type\":\"long\",\"default\":0},{\"name\":\"ssn\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"salary\",\"type\":\"int\",\"default\":0},{\"name\":\"boss\",\"type\":[\"null\",\"Employee\",\"string\"],\"default\":null},{\"name\":\"webpage\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"WebPage\",\"fields\":[{\"name\":\"url\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"content\",\"type\":[\"null\",\"bytes\"],\"default\":null},{\"name\":\"parsedContent\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"default\":{}},{\"name\":\"outlinks\",\"type\":{\"type\":\"map\",\"values\":[\"null\",\"string\"]},\"default\":{}},{\"name\":\"headers\",\"type\":[\"null\",{\"type\":\"map\",\"values\":[\"null\",\"string\"]}],\"default\":null},{\"name\":\"metadata\",\"type\":{\"type\":\"record\",\"name\":\"Metadata\",\"fields\":[{\"name\":\"version\",\"type\":\"int\",\"default\":0},{\"name\":\"data\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"default\":{}}]},\"default\":null}]}],\"default\":null}],\"default\":null}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public long dateOfBirth;
  @Deprecated public java.lang.CharSequence ssn;
  @Deprecated public int salary;
  @Deprecated public java.lang.Object boss;
  @Deprecated public WebPage webpage;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Employee() {}

  /**
   * All-args constructor.
   */
  public Employee(java.lang.CharSequence name, java.lang.Long dateOfBirth, java.lang.CharSequence ssn, java.lang.Integer salary, java.lang.Object boss, WebPage webpage) {
    this.name = name;
    this.dateOfBirth = dateOfBirth;
    this.ssn = ssn;
    this.salary = salary;
    this.boss = boss;
    this.webpage = webpage;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return dateOfBirth;
    case 2: return ssn;
    case 3: return salary;
    case 4: return boss;
    case 5: return webpage;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: dateOfBirth = (java.lang.Long)value$; break;
    case 2: ssn = (java.lang.CharSequence)value$; break;
    case 3: salary = (java.lang.Integer)value$; break;
    case 4: boss = (java.lang.Object)value$; break;
    case 5: webpage = (WebPage)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'dateOfBirth' field.
   */
  public java.lang.Long getDateOfBirth() {
    return dateOfBirth;
  }

  /**
   * Sets the value of the 'dateOfBirth' field.
   * @param value the value to set.
   */
  public void setDateOfBirth(java.lang.Long value) {
    this.dateOfBirth = value;
  }

  /**
   * Gets the value of the 'ssn' field.
   */
  public java.lang.CharSequence getSsn() {
    return ssn;
  }

  /**
   * Sets the value of the 'ssn' field.
   * @param value the value to set.
   */
  public void setSsn(java.lang.CharSequence value) {
    this.ssn = value;
  }

  /**
   * Gets the value of the 'salary' field.
   */
  public java.lang.Integer getSalary() {
    return salary;
  }

  /**
   * Sets the value of the 'salary' field.
   * @param value the value to set.
   */
  public void setSalary(java.lang.Integer value) {
    this.salary = value;
  }

  /**
   * Gets the value of the 'boss' field.
   */
  public java.lang.Object getBoss() {
    return boss;
  }

  /**
   * Sets the value of the 'boss' field.
   * @param value the value to set.
   */
  public void setBoss(java.lang.Object value) {
    this.boss = value;
  }

  /**
   * Gets the value of the 'webpage' field.
   */
  public WebPage getWebpage() {
    return webpage;
  }

  /**
   * Sets the value of the 'webpage' field.
   * @param value the value to set.
   */
  public void setWebpage(WebPage value) {
    this.webpage = value;
  }

  /** Creates a new Employee RecordBuilder */
  public static example.avro.Employee.Builder newBuilder() {
    return new example.avro.Employee.Builder();
  }
  
  /** Creates a new Employee RecordBuilder by copying an existing Builder */
  public static example.avro.Employee.Builder newBuilder(example.avro.Employee.Builder other) {
    return new example.avro.Employee.Builder(other);
  }
  
  /** Creates a new Employee RecordBuilder by copying an existing Employee instance */
  public static example.avro.Employee.Builder newBuilder(example.avro.Employee other) {
    return new example.avro.Employee.Builder(other);
  }
  
  /**
   * RecordBuilder for Employee instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Employee>
    implements org.apache.avro.data.RecordBuilder<Employee> {

    private java.lang.CharSequence name;
    private long dateOfBirth;
    private java.lang.CharSequence ssn;
    private int salary;
    private java.lang.Object boss;
    private WebPage webpage;

    /** Creates a new Builder */
    private Builder() {
      super(example.avro.Employee.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(example.avro.Employee.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[1].schema(), other.dateOfBirth);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ssn)) {
        this.ssn = data().deepCopy(fields()[2].schema(), other.ssn);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.salary)) {
        this.salary = data().deepCopy(fields()[3].schema(), other.salary);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.boss)) {
        this.boss = data().deepCopy(fields()[4].schema(), other.boss);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.webpage)) {
        this.webpage = data().deepCopy(fields()[5].schema(), other.webpage);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Employee instance */
    private Builder(example.avro.Employee other) {
            super(example.avro.Employee.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dateOfBirth)) {
        this.dateOfBirth = data().deepCopy(fields()[1].schema(), other.dateOfBirth);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ssn)) {
        this.ssn = data().deepCopy(fields()[2].schema(), other.ssn);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.salary)) {
        this.salary = data().deepCopy(fields()[3].schema(), other.salary);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.boss)) {
        this.boss = data().deepCopy(fields()[4].schema(), other.boss);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.webpage)) {
        this.webpage = data().deepCopy(fields()[5].schema(), other.webpage);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public example.avro.Employee.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public example.avro.Employee.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'dateOfBirth' field */
    public java.lang.Long getDateOfBirth() {
      return dateOfBirth;
    }
    
    /** Sets the value of the 'dateOfBirth' field */
    public example.avro.Employee.Builder setDateOfBirth(long value) {
      validate(fields()[1], value);
      this.dateOfBirth = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'dateOfBirth' field has been set */
    public boolean hasDateOfBirth() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'dateOfBirth' field */
    public example.avro.Employee.Builder clearDateOfBirth() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ssn' field */
    public java.lang.CharSequence getSsn() {
      return ssn;
    }
    
    /** Sets the value of the 'ssn' field */
    public example.avro.Employee.Builder setSsn(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ssn = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ssn' field has been set */
    public boolean hasSsn() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ssn' field */
    public example.avro.Employee.Builder clearSsn() {
      ssn = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'salary' field */
    public java.lang.Integer getSalary() {
      return salary;
    }
    
    /** Sets the value of the 'salary' field */
    public example.avro.Employee.Builder setSalary(int value) {
      validate(fields()[3], value);
      this.salary = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'salary' field has been set */
    public boolean hasSalary() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'salary' field */
    public example.avro.Employee.Builder clearSalary() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'boss' field */
    public java.lang.Object getBoss() {
      return boss;
    }
    
    /** Sets the value of the 'boss' field */
    public example.avro.Employee.Builder setBoss(java.lang.Object value) {
      validate(fields()[4], value);
      this.boss = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'boss' field has been set */
    public boolean hasBoss() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'boss' field */
    public example.avro.Employee.Builder clearBoss() {
      boss = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'webpage' field */
    public WebPage getWebpage() {
      return webpage;
    }
    
    /** Sets the value of the 'webpage' field */
    public example.avro.Employee.Builder setWebpage(WebPage value) {
      validate(fields()[5], value);
      this.webpage = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'webpage' field has been set */
    public boolean hasWebpage() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'webpage' field */
    public example.avro.Employee.Builder clearWebpage() {
      webpage = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public Employee build() {
      try {
        Employee record = new Employee();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.dateOfBirth = fieldSetFlags()[1] ? this.dateOfBirth : (java.lang.Long) defaultValue(fields()[1]);
        record.ssn = fieldSetFlags()[2] ? this.ssn : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.salary = fieldSetFlags()[3] ? this.salary : (java.lang.Integer) defaultValue(fields()[3]);
        record.boss = fieldSetFlags()[4] ? this.boss : (java.lang.Object) defaultValue(fields()[4]);
        record.webpage = fieldSetFlags()[5] ? this.webpage : (WebPage) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
