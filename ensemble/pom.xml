<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.infinispan</groupId>
      <artifactId>infinispan-parent</artifactId>
      <relativePath>../parent/pom.xml</relativePath>
       <version>7.0.0-SNAPSHOT</version>
   </parent>

   <artifactId>infinispan-ensemble</artifactId>
   <!-- no OSGI support yet -->
   <!-- <packaging>bundle</packaging> -->
   <name>Infinispan Ensemble</name>
   <description>Infinispan ensemble module</description>

   <properties>
      <module.skipComponentMetaDataProcessing>true</module.skipComponentMetaDataProcessing>
   </properties>

   <dependencies>

       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-query-dsl</artifactId>
       </dependency>

       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-remote-query-server</artifactId>
       </dependency>


       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-remote-query-client</artifactId>
       </dependency>

       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-core</artifactId>
       </dependency>

       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-commons</artifactId>
       </dependency>

       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-client-hotrod</artifactId>
       </dependency>

       <dependency>
           <groupId>org.apache.zookeeper</groupId>
           <artifactId>zookeeper</artifactId>
           <version>3.4.5</version>
       </dependency>

       <dependency>
           <groupId>net.killa.kept</groupId>
           <artifactId>KeptCollections</artifactId>
           <version>1.0.0</version>
       </dependency>

       <dependency>
           <groupId>org.menagerie</groupId>
           <artifactId>menagerie</artifactId>
           <version>1.2-SNAPSHOT</version>
       </dependency>

       <dependency>
           <groupId>javax.servlet</groupId>
           <artifactId>servlet-api</artifactId>
       </dependency>

       <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>tjws</artifactId>
           <version>3.0.8.Final</version>
       </dependency>

       <dependency>
           <groupId>javax.xml.bind</groupId>
           <artifactId>jaxb-api</artifactId>
           <version>2.2.11</version>
       </dependency>

       <dependency>
           <groupId>org.codehaus.jackson</groupId>
           <artifactId>jackson-mapper-asl</artifactId>
       </dependency>

       <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>resteasy-jaxrs</artifactId>
       </dependency>

       <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>jaxrs-api</artifactId>
           <version>3.0.5.Final</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>resteasy-jaxb-provider</artifactId>
           <version>3.0.5.Final</version>
       </dependency>

       <dependency>
           <groupId>org.jboss.resteasy</groupId>
           <artifactId>resteasy-jackson2-provider</artifactId>
           <version>3.0.5.Final</version>
       </dependency>

        <!-- testing !-->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-client-hotrod</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
       <dependency>
           <groupId>${project.groupId}</groupId>
           <artifactId>infinispan-remote-query-server</artifactId>
           <type>test-jar</type>
           <scope>test</scope>
       </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-core</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>infinispan-server-hotrod</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.testng</groupId>
            <artifactId>arquillian-testng-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
   </dependencies>

    <build>
        <plugins>
	    <!-- no OSGI support yet -->
            <!-- <plugin> -->
            <!--     <groupId>org.apache.felix</groupId> -->
            <!--     <artifactId>maven-bundle-plugin</artifactId> -->
            <!--     <configuration> -->
            <!--         <instructions> -->
            <!--             <Export-Package> -->
            <!--                 !${project.groupId}.ensemble.*,${project.groupId}.*;version=${project.version} -->
            <!--             </Export-Package> -->
            <!--         </instructions> -->
            <!--     </configuration> -->
            <!-- </plugin> -->
            <plugin>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro-maven-plugin</artifactId>
                <version>${version.avro}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>schema</goal>
                        </goals>
                        <configuration>
                            <testSourceDirectory>${project.basedir}/src/main/resources</testSourceDirectory>
                            <testOutputDirectory>${project.basedir}/src/main/java/</testOutputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>
